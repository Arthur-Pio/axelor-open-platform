---
title: Add support to encrypt secrets in properties
type: feature
description: |
  Secrets defined in `axelor-config.properties` can be encrypted. 
  Value should be wrapped in `ENC()` to indicate that the value is
  encrypted : `db.default.password = ENC(<some_thing>)`
  
  To use encrypted secrets, `config.encryptor.password` properties
  should be added : this is the secret key used to encrypt/decrypt data.
  
  Others optional properties can be added to use custom encryption : 
  `config.encryptor.algorithm`, `config.encryptor.key-obtention-iterations`, 
  `config.encryptor.provider-name`, `config.encryptor.provider-class-name`, 
  `config.encryptor.salt-generator-classname`, `config.encryptor.iv-generator-classname`, 
  and `config.encryptor.string-output-type`.
  The default algorithm is `PBEWITHHMACSHA512ANDAES_256`.
  
  For convenience, a Gradle task `encryptText` have been added to generate 
  the encrypted value of a string :
  `./gradlew :encryptText --text="A secret to encode" --password="MySecureKey"`
  This will generate for you, the necessary properties and the 
  encrypted value to used inside `ENC()`.
