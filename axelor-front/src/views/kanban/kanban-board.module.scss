.addInput {
  padding-left: 0.5rem !important;
  padding-right: 0.5rem !important;
  border: 1px solid var(--bs-border-color) !important;
  border-radius: var(--bs-border-radius) !important;
}

.board {
  padding: 0.5rem 0;
  gap: 0.5rem;
  & > * {
    max-width: 100%;
  }
  &.responsive {
    flex-direction: column;
  }
  overflow: auto;
}

.column-wrapper {
  display: flex;
  width: 24em;
  min-width: 250px;
  word-break: break-word;
}

.column-wrapper:has(.collapsed) {
  min-width: auto;
  width: auto;
}

.board.responsive .column-wrapper {
  width: auto;
  flex-grow: 1;
}

.column {
  background-color: var(--bs-tertiary-bg);
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  padding: 1rem;
}

.small-column {
  background-color: var(--bs-tertiary-bg);
  gap: 0.5rem;
  padding: 1rem;
}

.collapsed {
  display: flex;
  flex-direction: column;
  background-color: var(--bs-tertiary-bg);
  padding: 1rem;
}

.column-title {
  align-self: center;
  margin: 0;
  font-weight: 600;
  user-select: none;
}

.collapsed-column-title {
  writing-mode: sideways-rl;
  margin-top: 10px;
}

.record-list-wrapper {
  width: 100%;
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  &.overflow {
    overflow: auto;
  }
  &.no-data {
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
  }
}

.record-list {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.record {
  &:hover .record-action button,
  .record-action button[class*="open"] {
    visibility: inherit;
  }
  .record-action {
    position: absolute;

    top: 0;
    right: 0;

    button {
      visibility: hidden;
      padding: 0;
      background-color: transparent;
    }
  }
}

[dir="rtl"] .record-action {
  right: unset;
  left: 0;
}

.bottom-column-text {
  font-size: small;
}
